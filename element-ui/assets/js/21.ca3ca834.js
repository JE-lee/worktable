(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{467:function(e,t,s){"use strict";s.r(t);var v=s(14),a=Object(v.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"edsheet-element-ui"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#edsheet-element-ui"}},[e._v("#")]),e._v(" @edsheet/element-ui")]),e._v(" "),t("p",[e._v("可编辑表格（Editable sheet）是许多数据密集型应用程序的核心组成部分。然而，开发可编辑表格并不是一个容易的任务。开发人员必须平衡许多因素，包括界面设计、数据校验、联动和性能等方面。在这样的情况下，一个现成的、易于使用的可编辑表格解决方案将是开发人员的福音。")]),e._v(" "),t("p",[e._v("这就是 Edsheet（Editable sheet）的设计理念：简单易用、易于扩展、高效的可编辑表格解决方案。该解决方案基于mobx技术实现了表格状态隔离，并与 "),t("code",[e._v("vue")]),e._v(" 和 "),t("code",[e._v("react")]),e._v(" 框架无缝集成，同时也与许多流行的UI组件库（如"),t("code",[e._v("element-ui")]),e._v("、"),t("code",[e._v("antdesign-vue")]),e._v("、"),t("code",[e._v("ant")]),e._v("等）兼容，为用户提供了更加丰富、强大的功能。")]),e._v(" "),t("p",[e._v("Edsheet在设计时考虑到了用户的使用场景，其提供了许多常用功能的实现，包括行内编辑，数据校验和联动等等。此外，通过与UI组件库的结合，Edsheet还可以根据用户的需求添加更多的功能，例如自定义样式、行内搜索、分页等功能。")]),e._v(" "),t("p",[e._v("总之，Edsheet是一款可靠、高效、扩展性强的可编辑表格解决方案，采用mobx技术实现表格状态隔离，这可大大降低开发难度并提高开发效率。")]),e._v(" "),t("code-previewer",{attrs:{demoPath:"base/full"}})],1)}),[],!1,null,null,null);t.default=a.exports}}]);