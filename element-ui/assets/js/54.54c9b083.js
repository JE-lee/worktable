(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{440:function(n,e,t){"use strict";t.r(e),e.default="<template>\n  <div>\n    <div>\n      <el-button type=\"primary\" size=\"mini\" @click=\"doValidate\">校验</el-button>\n      <el-button type=\"primary\" size=\"mini\" @click=\"doSubmit\">提交</el-button>\n      <el-button type=\"primary\" size=\"mini\" @click=\"doAdd\">添加</el-button>\n      <el-button type=\"danger\" size=\"mini\" @click=\"doRemove\" :disabled=\"selections.length === 0\"\n        >删除选中</el-button\n      >\n    </div>\n    <worktable class=\"mt-10\" border @selection-change=\"onSelectionChange\" />\n  </div>\n</template>\n\n<script>\nimport { defineComponent, shallowRef } from 'vue-demi'\nimport { useWorktable, Worktable } from '@edsheet/element-ui'\n\nexport default defineComponent({\n  components: { Worktable },\n  setup() {\n    const selections = shallowRef([])\n    const columns = [\n      { type: 'selection', width: 60 },\n      { type: 'index', width: 80, title: '序号' },\n      {\n        title: '自定义序号列',\n        field: 'seq',\n        virtual: true,\n        width: 120,\n        value: (row) => `序号:${row.index + 1}`,\n      },\n      {\n        title: '名称',\n        field: 'name',\n        type: 'string',\n        component: 'Input',\n        required: true,\n        requiredMessage: '缺少名称',\n      },\n      {\n        title: '年龄',\n        field: 'age',\n        type: 'number',\n        component: 'Input',\n        componentProps: {\n          type: 'number',\n        },\n        default: '',\n      },\n      {\n        title: '性别',\n        field: 'gender',\n        type: 'string',\n        width: 200,\n        component: 'Select',\n        enum: [\n          { label: '男孩', value: 'boy' },\n          { label: '女孩', value: 'girl' },\n        ],\n      },\n    ]\n    const wt = useWorktable({\n      initialData: [{ name: '琪琪', gender: 'girl' }],\n      columns,\n    })\n\n    function doValidate() {\n      wt.validate()\n        .then(() => {\n          console.log('validate successed')\n        })\n        .catch((err) => {\n          console.error(err)\n        })\n    }\n\n    async function doSubmit() {\n      await wt.validate()\n      const data = wt.getData()\n      console.log('data', data)\n    }\n\n    function onSelectionChange(selected) {\n      selections.value = selected\n    }\n\n    function doRemove() {\n      wt.remove((row) => selections.value.some((r) => r.rid === row.rid))\n      selections.value = []\n    }\n\n    function doAdd() {\n      wt.add()\n    }\n\n    return {\n      doValidate,\n      doSubmit,\n      selections,\n      onSelectionChange,\n      doRemove,\n      doAdd,\n    }\n  },\n})\n<\/script>\n"}}]);