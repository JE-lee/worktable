(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{432:function(n,e,t){"use strict";t.r(e),e.default="<template>\n  <div>\n    <div>\n      <el-button type=\"primary\" size=\"mini\" @click=\"doValidate\">校验</el-button>\n      <el-button type=\"primary\" size=\"mini\" @click=\"doSubmit\">提交</el-button>\n    </div>\n    <worktable class=\"mt-10\" border />\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue-demi'\nimport { useWorktable, Worktable } from '@edsheet/element-ui'\nimport { getProvinces, getCities, getAreas } from './api'\n\nexport default defineComponent({\n  components: { Worktable },\n  setup() {\n    const columns = [\n      {\n        field: 'province',\n        title: '省份',\n        width: 160,\n        component: 'async-select',\n        componentProps: {\n          valueProp: 'province',\n          labelProp: 'name',\n          remoteMethod: getProvinces,\n        },\n        effects: {\n          onFieldValueChange(val, row) {\n            // 清空城市列\n            row.reset('city')\n            row.setComponentProps('city', { options: [] })\n            // 重新加载城市\n            row.setLoading('city', true)\n            getCities(val)\n              .then((cities) => row.setComponentProps('city', { options: cities }))\n              .finally(() => row.setLoading('city', false))\n          },\n        },\n      },\n      {\n        field: 'city',\n        title: '城市',\n        width: 160,\n        component: 'Select',\n        componentProps: (row) => {\n          const province = row.data.province\n          return {\n            disabled: !province,\n            valueProp: 'city',\n            labelProp: 'name',\n          }\n        },\n        effects: {\n          onFieldValueChange(val, row) {\n            // 清空县区列\n            row.reset('area')\n            row.setComponentProps('area', { options: [] })\n            // 重新加载县区\n            row.setLoading('area', true)\n            getAreas(row.data.province, val)\n              .then((areas) => row.setComponentProps('area', { options: areas }))\n              .finally(() => row.setLoading('area', false))\n          },\n        },\n      },\n      {\n        field: 'area',\n        title: '县区',\n        width: 160,\n        component: 'Select',\n        componentProps: (row) => {\n          const city = row.data.city\n          return {\n            disabled: !city,\n            valueProp: 'area',\n            labelProp: 'name',\n          }\n        },\n      },\n    ]\n    const wt = useWorktable({ columns })\n\n    // 添加一条空数据\n    wt.add()\n\n    function doValidate() {\n      wt.validate()\n        .then(() => {\n          console.log('validate successed')\n        })\n        .catch((err) => {\n          console.error(err)\n        })\n    }\n    async function doSubmit() {\n      await wt.validate()\n      const data = wt.getData()\n      console.log('data', data)\n    }\n\n    return {\n      doValidate,\n      doSubmit,\n    }\n  },\n})\n<\/script>\n"}}]);